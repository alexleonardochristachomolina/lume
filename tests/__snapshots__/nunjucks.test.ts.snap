export const snapshot = {};

snapshot[`build a site with nunjucks 1`] = `
{
  formats: [
    {
      engines: 0,
      ext: ".page.toml",
      loader: [AsyncFunction: toml],
      pageType: "page",
    },
    {
      engines: 1,
      ext: ".page.ts",
      loader: [AsyncFunction: module],
      pageType: "page",
    },
    {
      engines: 1,
      ext: ".page.js",
      loader: [AsyncFunction: module],
      pageType: "page",
    },
    {
      engines: 0,
      ext: ".page.jsonc",
      loader: [AsyncFunction: json],
      pageType: "page",
    },
    {
      engines: 0,
      ext: ".page.json",
      loader: [AsyncFunction: json],
      pageType: "page",
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: 0,
      ext: ".json",
      loader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: 0,
      ext: ".jsonc",
      loader: [AsyncFunction: json],
    },
    {
      engines: 1,
      ext: ".md",
      loader: [AsyncFunction: text],
      pageType: "page",
    },
    {
      engines: 1,
      ext: ".markdown",
      loader: [AsyncFunction: text],
      pageType: "page",
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".js",
      loader: [AsyncFunction: module],
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".ts",
      loader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".vento",
      loader: [AsyncFunction: text],
      pageType: "page",
    },
    {
      engines: 1,
      ext: ".vto",
      loader: [AsyncFunction: text],
      pageType: "page",
    },
    {
      dataLoader: [AsyncFunction: toml],
      engines: 0,
      ext: ".toml",
      loader: [AsyncFunction: toml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: 0,
      ext: ".yaml",
      loader: [AsyncFunction: yaml],
      pageType: "page",
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: 0,
      ext: ".yml",
      loader: [AsyncFunction: yaml],
      pageType: "page",
    },
    {
      engines: 1,
      ext: ".njk",
      loader: [AsyncFunction: text],
      pageType: "page",
    },
  ],
  src: [
    "/",
    "/_components",
    "/_components/Button.ts",
    "/_components/icon",
    "/_components/icon/User.njk",
    "/_data.yml",
    "/_includes",
    "/_includes/basic.njk",
    "/_includes/partial.njk",
    "/components.njk",
    "/data.njk",
    "/empty.njk",
    "/index.njk",
    "/njk-filter.page.js",
    "/with-helpers.njk",
  ],
}
`;

snapshot[`build a site with nunjucks 2`] = `[]`;

snapshot[`build a site with nunjucks 3`] = `
[
  {
    content: "
button {
  background-color: blue;
}

icon {
  width: 48px;
  height: 48px;
}
",
    data: {
      basename: "components",
      page: [
        "src",
        "data",
        "asset",
      ],
      url: "/components.css",
    },
    src: {
      asset: true,
      ext: "",
      path: "",
      remote: undefined,
    },
  },
  {
    content: '
document.querySelectorAll("button").forEach(button => {
  button.addEventListener("click", () => {
    alert("Hello world!");
  });
});

console.log("Hello world, from the icon/User component");
',
    data: {
      basename: "components",
      page: [
        "src",
        "data",
        "asset",
      ],
      url: "/components.js",
    },
    src: {
      asset: true,
      ext: "",
      path: "",
      remote: undefined,
    },
  },
  {
    content: '<!DOCTYPE html>

<html lang="en">
  <head>
    <meta charset="utf-8">
    <title></title>
  </head>
  <body>
    <main><button class="" type="button">
  button without arguments
</button>

<button class="" type="button">button content</button>
<icon name="John">
  this is John
</icon>


<button class="my-button" type="button">
  button content

  <icon name="John">
  
  this is John
  
</icon>

</button>
</main>
  </body>
</html>
',
    data: {
      basename: "components",
      children: '<button class="" type="button">
  button without arguments
</button>

<button class="" type="button">button content</button>
<icon name="John">
  this is John
</icon>


<button class="my-button" type="button">
  button content

  <icon name="John">
  
  this is John
  
</icon>

</button>
',
      comp: [
        "_components",
        "_proxies",
      ],
      content: '{% comp "Button" %}
  button without arguments
{% endcomp %}

{{ comp.Button({ content: "button content" }) | safe }}
{{ comp.icon.User({ content: "this is John", name:"John" }) | safe }}

{% comp "Button", className="my-button" %}
  button content

  {% comp "icon.user", name="John" %}
  this is John
  {% endcomp %}
{% endcomp %}
',
      date: [],
      layout: "basic.njk",
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
        "asset",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/components/",
    },
    src: {
      asset: false,
      ext: ".njk",
      path: "/components",
      remote: undefined,
    },
  },
  {
    content: '["red","green","blue"]
',
    data: {
      basename: "data",
      colors: "Array(3)",
      comp: [
        "_components",
        "_proxies",
      ],
      content: "{{ colors | dump | safe }}
",
      date: [],
      layout: null,
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
        "asset",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/data.json",
    },
    src: {
      asset: false,
      ext: ".njk",
      path: "/data",
      remote: undefined,
    },
  },
  {
    content: '<!DOCTYPE html>

<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Hello World</title>
  </head>
  <body>
    <main><h1>Hello World</h1>
</main>
  </body>
</html>
',
    data: {
      basename: "index",
      children: "<h1>Hello World</h1>
",
      comp: [
        "_components",
        "_proxies",
      ],
      content: "<h1>{{ title }}</h1>
",
      date: [],
      layout: "./_includes/basic.njk",
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
        "asset",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      title: "Hello World",
      url: "/",
    },
    src: {
      asset: false,
      ext: ".njk",
      path: "/index",
      remote: undefined,
    },
  },
  {
    content: '<!DOCTYPE html>

<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>njk filter example</title>
  </head>
  <body>
    <main><h1>NJK FILTER EXAMPLE</h1></main>
  </body>
</html>
',
    data: {
      basename: "njk-filter",
      children: "<h1>NJK FILTER EXAMPLE</h1>",
      comp: [
        "_components",
        "_proxies",
      ],
      content: "default",
      date: [],
      layout: "basic.njk",
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
        "asset",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      title: "njk filter example",
      url: "/njk-filter/",
    },
    src: {
      asset: false,
      ext: ".page.js",
      path: "/njk-filter",
      remote: undefined,
    },
  },
  {
    content: '<!DOCTYPE html>

<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>The title</title>
  </head>
  <body>
    <main><p><strong>THE TITLE</strong></p>
<p><strong>THE TITLE</strong></p>
<p><strong>THE TITLE</strong></p>
<p><strong>THE TITLE</strong></p>
<p><strong>THE TITLE</strong></p>
<p><strong>THE TITLE</strong></p>
<p><strong>THE TITLE</strong></p>
<p><strong>THE TITLE</strong></p>
<div>hello (async)</div>

<ul>
  <li>This is a partial</li>
  <li>async helper in a partial (async)</li>
</ul>
<ul>
  <li>This is a partial</li>
  <li>async helper in a partial (async)</li>
</ul>

<strong>The title</strong>
<strong>The title</strong>
<p><strong>The title</strong></p></main>
  </body>
</html>
',
    data: {
      basename: "with-helpers",
      children: "<p><strong>THE TITLE</strong></p>
<p><strong>THE TITLE</strong></p>
<p><strong>THE TITLE</strong></p>
<p><strong>THE TITLE</strong></p>
<p><strong>THE TITLE</strong></p>
<p><strong>THE TITLE</strong></p>
<p><strong>THE TITLE</strong></p>
<p><strong>THE TITLE</strong></p>
<div>hello (async)</div>

<ul>
  <li>This is a partial</li>
  <li>async helper in a partial (async)</li>
</ul>
<ul>
  <li>This is a partial</li>
  <li>async helper in a partial (async)</li>
</ul>

<strong>The title</strong>
<strong>The title</strong>
<p><strong>The title</strong></p>",
      comp: [
        "_components",
        "_proxies",
      ],
      content: '<p>{% upperCase title %}</p>
<p>{% upperCase "The title" %}</p>
<p>{% upperCaseAsync title %}</p>
<p>{% upperCaseAsync "The title" %}</p>
<p>{% upperCaseBody %}The title{% endupperCaseBody %}</p>
<p>{% upperCaseBody %}{{ title }}{% endupperCaseBody %}</p>
<p>{% upperCaseBodyAsync %}The title{% endupperCaseBodyAsync %}</p>
<p>{% upperCaseBodyAsync %}{{ title }}{% endupperCaseBodyAsync %}</p>
<div>{{ "hello" | returnAsync }}</div>

{% include "partial.njk" %}
{% include "./_includes/partial.njk" %}

<strong>{{ "title" | fromPage }}</strong>
<strong>{{ "title" | fromPageAsync }}</strong>
<p>{% fromPageTagAsync %}title{% endfromPageTagAsync %}</p>',
      date: [],
      layout: "basic.njk",
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
        "asset",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      title: "The title",
      url: "/with-helpers/",
    },
    src: {
      asset: false,
      ext: ".njk",
      path: "/with-helpers",
      remote: undefined,
    },
  },
]
`;
