export const snapshot = {};

snapshot[`Build a markdown site 1`] = `
{
  formats: [
    {
      engines: 0,
      ext: ".page.toml",
      loader: [AsyncFunction: toml],
      pageType: "page",
    },
    {
      engines: 1,
      ext: ".page.ts",
      loader: [AsyncFunction: module],
      pageType: "page",
    },
    {
      engines: 1,
      ext: ".page.js",
      loader: [AsyncFunction: module],
      pageType: "page",
    },
    {
      engines: 0,
      ext: ".page.jsonc",
      loader: [AsyncFunction: json],
      pageType: "page",
    },
    {
      engines: 0,
      ext: ".page.json",
      loader: [AsyncFunction: json],
      pageType: "page",
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: 0,
      ext: ".json",
      loader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: 0,
      ext: ".jsonc",
      loader: [AsyncFunction: json],
    },
    {
      engines: 1,
      ext: ".md",
      loader: [AsyncFunction: text],
      pageType: "page",
    },
    {
      engines: 1,
      ext: ".markdown",
      loader: [AsyncFunction: text],
      pageType: "page",
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".js",
      loader: [AsyncFunction: module],
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".ts",
      loader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".vento",
      loader: [AsyncFunction: text],
      pageType: "page",
    },
    {
      engines: 1,
      ext: ".vto",
      loader: [AsyncFunction: text],
      pageType: "page",
    },
    {
      dataLoader: [AsyncFunction: toml],
      engines: 0,
      ext: ".toml",
      loader: [AsyncFunction: toml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: 0,
      ext: ".yaml",
      loader: [AsyncFunction: yaml],
      pageType: "page",
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: 0,
      ext: ".yml",
      loader: [AsyncFunction: yaml],
      pageType: "page",
    },
  ],
  src: [
    "/",
    "/basic.md",
    "/empty.md",
    "/with-attributes.md",
    "/with-code.md",
    "/with-deflist.md",
    "/with-filter.vto",
    "/with-module.page.js",
    "/with-vto.md",
  ],
}
`;

snapshot[`Build a markdown site 2`] = `[]`;

snapshot[`Build a markdown site 3`] = `
[
  {
    content: "<!DOCTYPE html>
<h1>Normal page</h1>
<ul>
<li>List</li>
<li>Of</li>
<li>Elements</li>
</ul>",
    data: {
      basename: "basic",
      children: "<h1>Normal page</h1>
<ul>
<li>List</li>
<li>Of</li>
<li>Elements</li>
</ul>",
      content: "# Normal page

- List
- Of
- Elements
",
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
        "asset",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      title: "Basic page",
      url: "/basic/",
    },
    src: {
      asset: false,
      ext: ".md",
      path: "/basic",
      remote: undefined,
    },
  },
  {
    content: '<!DOCTYPE html>
<p><a href="#foo">link</a>{target=_blank}</p>',
    data: {
      basename: "with-attributes",
      children: '<p><a href="#foo">link</a>{target=_blank}</p>',
      content: "[link](#foo){target=_blank}
",
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
        "asset",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/with-attributes/",
    },
    src: {
      asset: false,
      ext: ".md",
      path: "/with-attributes",
      remote: undefined,
    },
  },
  {
    content: '<!DOCTYPE html>
<pre><code class="language-html">&#x3C;p>Example&#x3C;/p>
</code></pre>
<pre><code>&#x3C;p>Example without color highlight&#x3C;/p>
</code></pre>',
    data: {
      basename: "with-code",
      children: '<pre><code class="language-html">&#x3C;p>Example&#x3C;/p>
</code></pre>
<pre><code>&#x3C;p>Example without color highlight&#x3C;/p>
</code></pre>',
      content: "\`\`\`html
<p>Example</p>
\`\`\`

\`\`\`
<p>Example without color highlight</p>
\`\`\`
",
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
        "asset",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/with-code/",
    },
    src: {
      asset: false,
      ext: ".md",
      path: "/with-code",
      remote: undefined,
    },
  },
  {
    content: "<!DOCTYPE html>
<!-- deno-fmt-ignore-file -->
<p>This is a definition title
: And this the description
: Other description</p>
<p>Other title
: And other description</p>",
    data: {
      basename: "with-deflist",
      children: "<!-- deno-fmt-ignore-file -->
<p>This is a definition title
: And this the description
: Other description</p>
<p>Other title
: And other description</p>",
      content: "<!-- deno-fmt-ignore-file -->
This is a definition title
: And this the description
: Other description

Other title
: And other description
",
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
        "asset",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/with-deflist/",
    },
    src: {
      asset: false,
      ext: ".md",
      path: "/with-deflist",
      remote: undefined,
    },
  },
  {
    content: '<!DOCTYPE html>
<h1><p>Module <strong>example</strong></p></h1>

<div><p>Welcome to this <a href="/">page</a></p></div>
',
    data: {
      basename: "with-filter",
      children: '<h1><p>Module <strong>example</strong></p></h1>

<div><p>Welcome to this <a href="/">page</a></p></div>
',
      content: "<h1>{{ title |> md(true) }}</h1>

<div>{{ description |> md }}</div>
",
      date: [],
      description: "Welcome to this [page](/)
",
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
        "asset",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      title: "Module **example**",
      url: "/with-filter/",
    },
    src: {
      asset: false,
      ext: ".vto",
      path: "/with-filter",
      remote: undefined,
    },
  },
  {
    content: '<!DOCTYPE html>
<h1>Module example</h1>
<p><a href="/">Back to home</a></p>',
    data: {
      basename: "with-module",
      children: '<h1>Module example</h1>
<p><a href="/">Back to home</a></p>',
      content: "default",
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
        "asset",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      templateEngine: "js,md",
      title: "Module example",
      url: "/with-module/",
    },
    src: {
      asset: false,
      ext: ".page.js",
      path: "/with-module",
      remote: undefined,
    },
  },
  {
    content: '<!DOCTYPE html>
<!-- deno-fmt-ignore-file -->
<h1>Module <strong>example</strong></h1>
<p>Foo</p>
<ul>
<li>one: <a href="/items/un.html">un</a></li>
<li>two: <a href="/items/dous.html">dous</a></li>
<li>three: <a href="/items/tres.html">tres</a></li>
</ul>',
    data: {
      basename: "with-vto",
      children: '<!-- deno-fmt-ignore-file -->
<h1>Module <strong>example</strong></h1>
<p>Foo</p>
<ul>
<li>one: <a href="/items/un.html">un</a></li>
<li>two: <a href="/items/dous.html">dous</a></li>
<li>three: <a href="/items/tres.html">tres</a></li>
</ul>',
      content: "<!-- deno-fmt-ignore-file -->
# {{ title }}

Foo

{{ for title, no of myData }}
- {{ title }}: [{{ no }}](/items/{{ no }}.html)
{{- /for }}
",
      date: [],
      mergedKeys: [
        "tags",
      ],
      myData: [
        "one",
        "two",
        "three",
      ],
      page: [
        "src",
        "data",
        "asset",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      templateEngine: "vto,md",
      title: "Module **example**",
      url: "/with-vto/",
    },
    src: {
      asset: false,
      ext: ".md",
      path: "/with-vto",
      remote: undefined,
    },
  },
]
`;
